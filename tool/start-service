#!/bin/sh
# Use `tool/start-service` to start the server,
# or `tool/start-service --dev` to start the server and
# auto restart when the code is updated.

cd `dirname $0`'/..'
source tool/load-env
current_pid=$$

webpack_cmd="./node_modules/.bin/webpack"
server_cmd="python -m backend.app"

killSubproc() {
	test $server_pid -ne 0 && kill -TERM $server_pid
	test $webpack_pid -ne 0 && kill -INT $webpack_pid
	exit 1
}

runPythonServerBackground() {
	$server_cmd &
	server_pid=$!
	sleep 1.5
	if [ -z "`ps $server_pid | sed 1d`" ]; then
		server_pid=0;
	fi
}

# $1 = 0/1 => deploy/dev
runWebpack() {
	if ! [ -e webpack.config.js ]; then
		echo ""
		echo "webpack.config.js not exist, skipping webpack..."
		echo ""	
		webpack_pid=0
		return 0
	fi
	if [ $1 -eq 0 ]; then
		$webpack_cmd --mode production
	else
		$webpack_cmd --mode development --progress --colors --watch &
		webpack_pid=$!
	fi
}

echoMD5() {
	if [ -n "`command -v md5`" ]; then
		md5_comm="md5"
	else
		md5_comm="md5sum"
	fi
	echo `ls -lR . | grep -E \.py$ | $md5_comm`
}

monitorModify() {
	new_MD5=`echoMD5`
	if [ "$old_MD5" != "$new_MD5" ]; then
		echo ""
		echo "-------------- reload ${server_pid} --------------"
		echo ""
		test $server_pid -ne 0	&& kill -TERM $server_pid
		runPythonServerBackground
		old_MD5=`echoMD5`
	fi
}

if [ "$1" == "--dev" ]; then
	# To clean up subproces when user press ctrl+c
	trap 'killSubproc' INT
	# TODO: We don't know why add this line, add comments
	trap 'server_pid=0' USR1

	runWebpack 1

	runPythonServerBackground

	old_MD5=`echoMD5`
	while [ 1 ]; do
		sleep 1
		monitorModify
	done
else
	runWebpack 0

	# Script block at this line
	$server_cmd
fi
